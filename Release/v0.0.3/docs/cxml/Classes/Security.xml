<?xml version="1.0"?>
<object kind="class" generator="appledoc v1.0.5">
    <name>Security</name>
    <file>Security.h</file>
    <base>NSObject</base>
    <description>
        <brief>
            <para>
                <ref id="">Security</ref>
                 is the main factory class for applying security. </para>
        </brief>
        <details>
            <para>Essentially you set it up with the security information you have then ask it to provide a security handler back. This handler can then be used to implement that style of security on the soap messages. Here is an example of how to use it: <example>
                    <code>&amp;nbsp;<ref id="">Security</ref>
                        &amp;nbsp;*security&amp;nbsp;=&amp;nbsp;[<ref id="">Security</ref>
                        &amp;nbsp;<ref id="#createSecurityWithUserid">createSecurityWithUserid</ref>
                        :&amp;nbsp;userid&amp;nbsp;<ref id="#password">password</ref>
                        :&amp;nbsp;password];</code>
                    <code>&amp;nbsp;<ref id="#NSObject">NSObject</ref>
                        &amp;nbsp;&amp;lt;SecurityModel&amp;ht;&amp;nbsp;*securer&amp;nbsp;=&amp;nbsp;[security&amp;nbsp;<ref id="#createSecurityModelOfType">createSecurityModelOfType</ref>
                        :&amp;nbsp;securityType];</code>
                    <code>&amp;nbsp;[securer&amp;nbsp;secureSoapMessage:&amp;nbsp;soapMsg];</code>
                </example>
                <ref id="">Security</ref>
                 seperated into two parts to make it easy to use. The act of constructing an instance if <ref id="">Security</ref>
                 also gives it the necessary data it needs to work with. ie.userid and password. The second part of getting the model and applying it to the message provides the flexibility of being able to aply different models as needed. </para>
        </details>
    </description>
    <sections>
        <section>
            <name>Other</name>
            <member kind="instance-method">
                <name>initWithUserid:password:</name>
                <type>Security *</type>
                <prototype>- (Security *)initWithUserid:(NSString *)<parameter>aUserid</parameter>
                     password:(NSString *)<parameter>aPassword</parameter>
                     </prototype>
                <file>Security.h</file>
                <description>
                    <brief>
                        <para>Constructors and factory methods. </para>
                    </brief>
                    <details>
                        <para>Default constructor. At this stage it simple takes a userid and password. As time goes on there will need to be other constructors which take other types of security information. </para>
                    </details>
                </description>
                <selector>- initWithUserid:password:</selector>
            </member>
            <member kind="instance-method">
                <name>createSecurityModelOfType:</name>
                <type>NSObject&lt;SecurityModel> *</type>
                <prototype>- (NSObject&lt;SecurityModel> *)createSecurityModelOfType:(SECURITYTYPE)<parameter>securityType</parameter>
                     </prototype>
                <file>Security.h</file>
                <description>
                    <brief>
                        <para>Called to obtain an instance of <ref id="../Protocols/SecurityModel$EXTENSION">SecurityModel</ref>
                             which implements the required security. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- createSecurityModelOfType:</selector>
            </member>
        </section>
        <section>
            <name>Other</name>
            <member kind="class-method">
                <name>createSecurityWithUserid:password:</name>
                <type>Security *</type>
                <prototype>+ (Security *)createSecurityWithUserid:(NSString *)<parameter>aUserid</parameter>
                     password:(NSString *)<parameter>aPassword</parameter>
                     </prototype>
                <file>Security.h</file>
                <description>
                    <brief>
                        <para>Creates an autorelease instance of <ref id="">Security</ref>
                             with the passed userid and password. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>+ createSecurityWithUserid:password:</selector>
            </member>
        </section>
    </sections>
</object>