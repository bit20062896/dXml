<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object kind="class" generator="appledoc v1.0.5">
    <name>UrlConnection</name>
    <file>UrlConnection+NSURLConnectionDelegate.m</file>
    <base>NSObject</base>
    <description>
        <brief>
            <para>This is the driver class for communicating with a url. </para>
        </brief>
        <details>
            <para>It's basic job is to send and receive data from the server and to manage security. Here is a basic example of using this class <example>
                    <code> NSString *request = @"&amp;lt;?xml version=\"1.0\" encoding=\"UTF-8\"&amp;gt;"</code>
                    <code>    @"&amp;lt;soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&amp;gt;"</code>
                    <code>    @"&amp;lt;soap:Body&amp;gt;"</code>
                    <code>    @"&amp;lt;dhc:balance xmlns:dhc=\"" MODEL_SCHEMA "\"&amp;gt;"</code>
                    <code>    @"&amp;lt;forAccountNumber&amp;gt;1234&amp;lt;/forAccountNumber&amp;gt;"</code>
                    <code>    @"&amp;lt;/dhc:balance&amp;gt;"</code>
                    <code>    @"\n\t&amp;lt;/soap:Body&amp;gt;"</code>
                    <code>    @"\n&amp;lt;/soap:Envelope&amp;gt;";</code>
                    <code></code>
                    <code>
                        <ref id="">UrlConnection</ref>
                         *connection = [<ref id="">UrlConnection</ref>
                        <ref id="#createWithUrl">createWithUrl</ref>
                        : BANKING];</code>
                    <code> [connection <ref id="#setHeaderValue">setHeaderValue</ref>
                        : BALANCE_ACTION <ref id="#forKey">forKey</ref>
                        : @"SOAPAction"];</code>
                    <code> NSData *data = [connection <ref id="#post">post</ref>
                        : request];</code>
                </example>
            </para>
        </details>
    </description>
    <sections>
        <section>
            <name>Other</name>
            <member kind="property">
                <name>serverUrl</name>
                <type>NSString *</type>
                <prototype>@property NSString *serverUrl</prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>This is the url that refers to the server. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>serverUrl</selector>
            </member>
            <member kind="property">
                <name>error</name>
                <type>NSError *</type>
                <prototype>@property NSError *error</prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>If an error is detected during operations, it is stored in this property or accessing by the calling program. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>error</selector>
            </member>
            <member kind="property">
                <name>allowSelfSignedCertificates</name>
                <type>BOOL</type>
                <prototype>@property BOOL allowSelfSignedCertificates</prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>If set to true, the <ref id="">UrlConnection</ref>
                             will accept self signed cerificates from the server. </para>
                    </brief>
                    <details>
                        <para>This is most useful when developing code as the server can be on the developer's machine. This setting allows the developer to work without having to obtain formal certifcates. </para>
                    </details>
                </description>
                <selector>allowSelfSignedCertificates</selector>
            </member>
            <member kind="property">
                <name>storeCredentials</name>
                <type>BOOL</type>
                <prototype>@property BOOL storeCredentials</prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>If set to true, credentials are stored and reused. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>storeCredentials</selector>
            </member>
        </section>
        <section>
            <name>Other</name>
            <member kind="instance-method">
                <name>initWithUrl:</name>
                <type>UrlConnection *</type>
                <prototype>- (UrlConnection *)initWithUrl:(NSString *)<parameter>aUrl</parameter>
                </prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>Default constructor. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- initWithUrl:</selector>
            </member>
            <member kind="instance-method">
                <name>post:</name>
                <type>NSData *</type>
                <prototype>- (NSData *)post:(NSString *)<parameter>bodyContent</parameter>
                </prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>Call this to post a message to the destination server. </para>
                    </brief>
                    <details>
                        <para>The bodyContent data will be set as the httpBodyContent in the post message. The response is the raw stream returned by the server. </para>
                    </details>
                </description>
                <exceptions>
                    <param>
                        <name>UrlConnectioNException</name>
                        <description>
                            <para>if an error occurs. </para>
                        </description>
                    </param>
                </exceptions>
                <seeAlso>
                    <item>
                        <ref id="#NSURLConnectionDelegate for details of how the response is assembled.">NSURLConnectionDelegate for details of how the response is assembled.</ref>
                    </item>
                </seeAlso>
                <selector>- post:</selector>
            </member>
            <member kind="instance-method">
                <name>setHeaderValue:forKey:</name>
                <type>void</type>
                <prototype>- (void)setHeaderValue:(NSString *)<parameter>value</parameter>
                     forKey:(NSString *)<parameter>key</parameter>
                </prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>Adds a header element to the message. </para>
                    </brief>
                    <details>
                        <para>Call before posting a message. </para>
                    </details>
                </description>
                <selector>- setHeaderValue:forKey:</selector>
            </member>
            <member kind="instance-method">
                <name>setUsername:password:</name>
                <type>void</type>
                <prototype>- (void)setUsername:(NSString *)<parameter>aUsername</parameter>
                     password:(NSString *)<parameter>aPassword</parameter>
                </prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>Sets the username and password to be used for encrypted connections. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- setUsername:password:</selector>
            </member>
        </section>
        <section>
            <name>Other</name>
            <member kind="class-method">
                <name>createWithUrl:</name>
                <type>UrlConnection *</type>
                <prototype>+ (UrlConnection *)createWithUrl:(NSString *)<parameter>aUrl</parameter>
                </prototype>
                <file>UrlConnection.h</file>
                <description>
                    <brief>
                        <para>Factory method which generates a autorelease instance. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>+ createWithUrl:</selector>
            </member>
        </section>
    </sections>
</object>