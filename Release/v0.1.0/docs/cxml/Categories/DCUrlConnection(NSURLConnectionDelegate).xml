<?xml version="1.0"?>
<object kind="category" generator="appledoc v1.0.5">
    <name>DCUrlConnection(NSURLConnectionDelegate)</name>
    <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
    <description>
        <brief>
            <para>This category adds further functionality to a <ref id="../Classes/DCUrlConnection$EXTENSION">DCUrlConnection</ref>
                . </para>
        </brief>
        <details>
            <para>The main purpose is to break the code base for <ref id="../Classes/DCUrlConnection$EXTENSION">DCUrlConnection</ref>
                 up into managable units. In this case we have a collection of delegate methods from NSURLConnection which handle the responses from a url.</para>
            <para>There is not a lot of code here. Most of it is around two things: connection:didReceiveData: which is used to assemble the text contained within an xml tag. And connection:canAuthenticateAgainstProtectionSpace: which handles certificates and ssl security. </para>
        </details>
    </description>
    <sections>
        <section>
            <name>Delegate methods</name>
            <member kind="instance-method">
                <name>connection:willSendRequest:redirectResponse:</name>
                <type>NSURLRequest *</type>
                <prototype>- (NSURLRequest *)connection:(NSURLConnection *)<parameter>connection</parameter>
                     willSendRequest:(NSURLRequest *)<parameter>request</parameter>
                     redirectResponse:(NSURLResponse *)<parameter>response</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:willSendRequest:redirectResponse:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:canAuthenticateAgainstProtectionSpace:</name>
                <type>BOOL</type>
                <prototype>- (BOOL)connection:(NSURLConnection *)<parameter>connection</parameter>
                     canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)<parameter>protectionSpace</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:canAuthenticateAgainstProtectionSpace:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:needNewBodyStream:</name>
                <type>NSInputStream *</type>
                <prototype>- (NSInputStream *)connection:(NSURLConnection *)<parameter>connection</parameter>
                     needNewBodyStream:(NSURLRequest *)<parameter>request</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:needNewBodyStream:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didReceiveAuthenticationChallenge:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)<parameter>challenge</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didReceiveAuthenticationChallenge:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didCancelAuthenticationChallenge:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)<parameter>challenge</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didCancelAuthenticationChallenge:</selector>
            </member>
            <member kind="instance-method">
                <name>connectionShouldUseCredentialStorage:</name>
                <type>BOOL</type>
                <prototype>- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)<parameter>connection</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connectionShouldUseCredentialStorage:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didReceiveResponse:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didReceiveResponse:(NSURLResponse *)<parameter>response</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didReceiveResponse:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didReceiveData:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didReceiveData:(NSData *)<parameter>data</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didReceiveData:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didSendBodyData:(NSInteger)<parameter>bytesWritten</parameter>
                     totalBytesWritten:(NSInteger)<parameter>totalBytesWritten</parameter>
                     totalBytesExpectedToWrite:(NSInteger)<parameter>totalBytesExpectedToWrite</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:</selector>
            </member>
            <member kind="instance-method">
                <name>connectionDidFinishLoading:</name>
                <type>void</type>
                <prototype>- (void)connectionDidFinishLoading:(NSURLConnection *)<parameter>connection</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connectionDidFinishLoading:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didFailWithError:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didFailWithError:(NSError *)<parameter>error</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didFailWithError:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:willCacheResponse:</name>
                <type>NSCachedURLResponse *</type>
                <prototype>- (NSCachedURLResponse *)connection:(NSURLConnection *)<parameter>connection</parameter>
                     willCacheResponse:(NSCachedURLResponse *)<parameter>cachedResponse</parameter>
                     </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:willCacheResponse:</selector>
            </member>
        </section>
    </sections>
</object>