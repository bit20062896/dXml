<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object kind="class" generator="appledoc v1.0.5">
    <name>DCXmlNode</name>
    <file>DCXmlNode.h</file>
    <base id="DCDMNode$EXTENSION">DCDMNode</base>
    <base>NSObject</base>
    <description>
        <brief>
            <para>
                <ref id="">DCXmlNode</ref>
                 is the main class used to represent nodes in the Document Model (DM) tree. </para>
        </brief>
        <details>
            <para>The <ref id="DCXmlParser$EXTENSION">DCXmlParser</ref>
                 and it's two delegates (<ref id="DCXmlSubtreeParserDelegate$EXTENSION">DCXmlSubtreeParserDelegate</ref>
                 and <ref id="DCXmlDocumentParserDelegate$EXTENSION">DCXmlDocumentParserDelegate</ref>
                ) will generate the whole DM using instances of this class and the <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                 class. The bulk of the functionality of the api with regards to the document model is embedded in this class. </para>
            <para>DCXmlNodes contain all the data required to represent a xml element in the object graph: <list>
                    <item>
                        <para>name </para>
                    </item>
                    <item>
                        <para>prefix </para>
                    </item>
                    <item>
                        <para>attributes </para>
                    </item>
                    <item>
                        <para>namespace declarations </para>
                    </item>
                    <item>
                        <para>sub elements which can be of any DMNode type. </para>
                    </item>
                </list>
                <ref id="">DCXmlNode</ref>
                 is also the main factory class of the DM, being about to create instances of itself as well as other nodes such as the <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                . </para>
        </details>
    </description>
    <sections>
        <section>
            <name>Properties</name>
            <member kind="property">
                <name>name</name>
                <type>NSString *</type>
                <prototype>@property NSString *name</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>The name of the <ref id="">DCXmlNode</ref>
                             as it would be printed in an xml stream. </para>
                    </brief>
                    <details>
                        <para>For example a name of "abc" would yeild this xml <example>
                                <code>&amp;nbsp;&amp;lt;&lt;b>abc&lt;/b>&amp;nbsp;/&amp;gt;</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>name</selector>
            </member>
            <member kind="property">
                <name>prefix</name>
                <type>NSString *</type>
                <prototype>@property NSString *prefix</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Schema prefix. </para>
                    </brief>
                    <details>
                        <para>For example <example>
                                <code>&amp;nbsp;&amp;lt;&lt;b>soapenv&lt;/b>:Body&amp;nbsp;/&amp;gt;</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>prefix</selector>
            </member>
            <member kind="property">
                <name>defaultSchema</name>
                <type>NSString *</type>
                <prototype>@property NSString *defaultSchema</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>The defaultSchema is a schema specified without a prefix. </para>
                    </brief>
                    <details>
                        <para>There can be only one of these for a <ref id="">DCXmlNode</ref>
                            . For example <example>
                                <code>&amp;nbsp;&amp;lt;abc&amp;nbsp;&lt;b>xmlns="http://defaultschema.com"&lt;/b>&amp;nbsp;/&amp;gt;</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>defaultSchema</selector>
            </member>
        </section>
        <section>
            <name>Constructors and factory methods</name>
            <member kind="instance-method">
                <name>initWithName:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)initWithName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Creates a <ref id="">DCXmlNode</ref>
                             with just a name. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- initWithName:</selector>
            </member>
            <member kind="instance-method">
                <name>initWithName:prefix:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)initWithName:(NSString *)<parameter>aName</parameter>
                     prefix:(NSString *)<parameter>aPrefix</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Creates a <ref id="">DCXmlNode</ref>
                             with a name and namespace prefix. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- initWithName:prefix:</selector>
            </member>
            <member kind="class-method">
                <name>createWithName:</name>
                <type>DCXmlNode *</type>
                <prototype>+ (DCXmlNode *)createWithName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Factory method which creates a node (autorelease) with just a name and returns it. </para>
                    </brief>
                    <details>
                        <para></para>
                    </details>
                </description>
                <parameters>
                    <param>
                        <name>aName</name>
                        <description>
                            <para>the name of the xml node. </para>
                        </description>
                    </param>
                </parameters>
                <selector>+ createWithName:</selector>
            </member>
            <member kind="class-method">
                <name>createWithName:prefix:</name>
                <type>DCXmlNode *</type>
                <prototype>+ (DCXmlNode *)createWithName:(NSString *)<parameter>aName</parameter>
                     prefix:(NSString *)<parameter>aPrefix</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Factory method which creates a node (autorelease) with a given name and prefix, then returns it. </para>
                    </brief>
                    <details>
                        <para></para>
                    </details>
                </description>
                <parameters>
                    <param>
                        <name>aName</name>
                        <description>
                            <para>the name of the xml node. </para>
                        </description>
                    </param>
                    <param>
                        <name>aPrefix</name>
                        <description>
                            <para>the namespace prefix to apply. </para>
                        </description>
                    </param>
                </parameters>
                <selector>+ createWithName:prefix:</selector>
            </member>
            <member kind="class-method">
                <name>createWithName:value:</name>
                <type>DCXmlNode *</type>
                <prototype>+ (DCXmlNode *)createWithName:(NSString *)<parameter>aName</parameter>
                     value:(NSString *)<parameter>aValue</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Factory method which creates a node (autorelease) with a given name, and then sets a single <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             under it containing the passed value. </para>
                    </brief>
                    <details>
                        <para></para>
                    </details>
                </description>
                <parameters>
                    <param>
                        <name>aName</name>
                        <description>
                            <para>the name of the xml node. </para>
                        </description>
                    </param>
                    <param>
                        <name>aValue</name>
                        <description>
                            <para>the value to set on the <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                                . </para>
                        </description>
                    </param>
                </parameters>
                <selector>+ createWithName:value:</selector>
            </member>
            <member kind="class-method">
                <name>createWithName:prefix:value:</name>
                <type>DCXmlNode *</type>
                <prototype>+ (DCXmlNode *)createWithName:(NSString *)<parameter>aName</parameter>
                     prefix:(NSString *)<parameter>aPrefix</parameter>
                     value:(NSString *)<parameter>aValue</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Factory method which creates a node (autorelease) with a given name and prefix, and then sets a single <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             under it containing the passed value. </para>
                    </brief>
                    <details>
                        <para></para>
                    </details>
                </description>
                <parameters>
                    <param>
                        <name>aName</name>
                        <description>
                            <para>the name of the xml node. </para>
                        </description>
                    </param>
                    <param>
                        <name>aPrefix</name>
                        <description>
                            <para>the namespace prefix to apply. </para>
                        </description>
                    </param>
                    <param>
                        <name>aValue</name>
                        <description>
                            <para>the value to set on the <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                                . </para>
                        </description>
                    </param>
                </parameters>
                <selector>+ createWithName:prefix:value:</selector>
            </member>
        </section>
        <section>
            <name>Querying</name>
            <member kind="instance-method">
                <name>isEqualToName:</name>
                <type>BOOL</type>
                <prototype>- (BOOL)isEqualToName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Used during search loops to find child DCXmlNodes based on their names only. </para>
                    </brief>
                    <details>
                        <para>Obviously this only finds instances of <ref id="">DCXmlNode</ref>
                            . </para>
                    </details>
                </description>
                <selector>- isEqualToName:</selector>
            </member>
        </section>
        <section>
            <name>Subnodes</name>
            <member kind="instance-method">
                <name>countNodes</name>
                <type>int</type>
                <prototype>- (int)countNodes</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns the number of nodes within this node. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- countNodes</selector>
            </member>
            <member kind="instance-method">
                <name>xmlNodeWithName:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)xmlNodeWithName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Locates and returns a <ref id="">DCXmlNode</ref>
                             based on it's name only. </para>
                    </brief>
                    <details>
                        <para>Again this will only find DCXmlNodes. </para>
                    </details>
                </description>
                <selector>- xmlNodeWithName:</selector>
            </member>
            <member kind="instance-method">
                <name>nodeAtIndex:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)nodeAtIndex:(int)<parameter>aIndex</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns the DMObject at the specific index. </para>
                    </brief>
                    <details>
                        <para>This can return any type of DMObject. </para>
                    </details>
                </description>
                <selector>- nodeAtIndex:</selector>
            </member>
            <member kind="instance-method">
                <name>addNode:</name>
                <type>void</type>
                <prototype>- (void)addNode:(DCDMNode *)<parameter>element</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds a new child <ref id="DCDMNode$EXTENSION">DCDMNode</ref>
                             to the end of the list of sub elements. </para>
                    </brief>
                    <details>
                        <para>This is the main method for adding child nodes. If the passed node is a <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             then it is just added to the nodesInOrder variable. if it's from the <ref id="">DCXmlNode</ref>
                             hirachy then it is also added to the nodesByName dictionary, however this will only happen if there is not a node already present with the specified name. In other words, this method will only index the first occurance of a <ref id="">DCXmlNode</ref>
                             with any give name. </para>
                    </details>
                </description>
                <selector>- addNode:</selector>
            </member>
            <member kind="instance-method">
                <name>addXmlNodeWithName:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)addXmlNodeWithName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds a new child <ref id="">DCXmlNode</ref>
                             to the end of the list of DCDMNodes. </para>
                    </brief>
                    <details>
                        <para>This first constructs an instance of <ref id="">DCXmlNode</ref>
                             and then passes it to the addXmlNode(XmlNode *) method. The returned <ref id="">DCXmlNode</ref>
                             is autoreleased. </para>
                    </details>
                </description>
                <seeAlso>
                    <item>
                        <ref id="#addXmlNode:">addXmlNode:</ref>
                    </item>
                </seeAlso>
                <selector>- addXmlNodeWithName:</selector>
            </member>
            <member kind="instance-method">
                <name>addXmlNodeWithName:prefix:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)addXmlNodeWithName:(NSString *)<parameter>aName</parameter>
                     prefix:(NSString *)<parameter>aPrefix</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds a new child <ref id="">DCXmlNode</ref>
                             to the end of the list of DCDMNodes. </para>
                    </brief>
                    <details>
                        <para>This first constructs an instance of <ref id="">DCXmlNode</ref>
                             and then passes it to the addXmlNode(XmlNode *) method. The returned <ref id="">DCXmlNode</ref>
                             is autoreleased. </para>
                    </details>
                </description>
                <seeAlso>
                    <item>
                        <ref id="#addXmlNode:">addXmlNode:</ref>
                    </item>
                </seeAlso>
                <selector>- addXmlNodeWithName:prefix:</selector>
            </member>
            <member kind="instance-method">
                <name>addXmlNodeWithName:value:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)addXmlNodeWithName:(NSString *)<parameter>aName</parameter>
                     value:(NSString *)<parameter>aValue</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds a new child <ref id="">DCXmlNode</ref>
                             to the end of the list of DCDMNodes. </para>
                    </brief>
                    <details>
                        <para>This first constructs an instance of <ref id="">DCXmlNode</ref>
                             and then passes it to the addXmlNode(XmlNode *) method. The returned <ref id="">DCXmlNode</ref>
                             is autoreleased. </para>
                    </details>
                </description>
                <seeAlso>
                    <item>
                        <ref id="#addXmlNode:">addXmlNode:</ref>
                    </item>
                </seeAlso>
                <selector>- addXmlNodeWithName:value:</selector>
            </member>
            <member kind="instance-method">
                <name>addXmlNodeWithName:prefix:value:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)addXmlNodeWithName:(NSString *)<parameter>aName</parameter>
                     prefix:(NSString *)<parameter>aPrefix</parameter>
                     value:(NSString *)<parameter>aValue</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds a new child <ref id="">DCXmlNode</ref>
                             to the end of the list of DCDMNodes. </para>
                    </brief>
                    <details>
                        <para>This first constructs an instance of <ref id="">DCXmlNode</ref>
                             and then passes it to the addXmlNode(XmlNode *) method. The returned <ref id="">DCXmlNode</ref>
                             is autoreleased. </para>
                    </details>
                </description>
                <seeAlso>
                    <item>
                        <ref id="#addXmlNode:">addXmlNode:</ref>
                    </item>
                </seeAlso>
                <selector>- addXmlNodeWithName:prefix:value:</selector>
            </member>
            <member kind="instance-method">
                <name>hasXmlNodeWithName:</name>
                <type>BOOL</type>
                <prototype>- (BOOL)hasXmlNodeWithName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>returns true if the current <ref id="">DCXmlNode</ref>
                             has a child <ref id="">DCXmlNode</ref>
                             with the specified name. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- hasXmlNodeWithName:</selector>
            </member>
            <member kind="instance-method">
                <name>nodes</name>
                <type>NSEnumerator *</type>
                <prototype>- (NSEnumerator *)nodes</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns a NSEnumerator which can be used to iteration through all the DCDMNodes. </para>
                    </brief>
                    <details>
                        <para>For example <example>
                                <code>&amp;nbsp;for&amp;nbsp;(<ref id="DCDMNode$EXTENSION">DCDMNode</ref>
                                    &amp;nbsp;*&amp;nbsp;node&amp;nbsp;in&amp;nbsp;[aXmlNode&amp;nbsp;<ref id="#nodes">- nodes</ref>
                                    ]&amp;nbsp;{</code>
                                <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&amp;nbsp;do&amp;nbsp;your&amp;nbsp;stuff&amp;nbsp;here&amp;nbsp;...</code>
                                <code>&amp;nbsp;}</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>- nodes</selector>
            </member>
            <member kind="instance-method">
                <name>xmlNodesWithName:</name>
                <type>NSEnumerator *</type>
                <prototype>- (NSEnumerator *)xmlNodesWithName:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Searches the child nodes for DCXmlNodes with the specific name and returns a new NSArray containing just those nodes. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- xmlNodesWithName:</selector>
            </member>
        </section>
        <section>
            <name>Namespaces</name>
            <member kind="instance-method">
                <name>addNamespace:prefix:</name>
                <type>void</type>
                <prototype>- (void)addNamespace:(NSString *)<parameter>aUrl</parameter>
                     prefix:(NSString *)<parameter>aPrefix</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds a namespace and prefix to the current <ref id="">DCXmlNode</ref>
                            . </para>
                    </brief>
                    <details>
                        <para>This will manifest as a namespace declaration in any produced xml. For example: <example>
                                <code>&amp;nbsp;<ref id="">DCXmlNode</ref>
                                    &amp;nbsp;*&amp;nbsp;node&amp;nbsp;=&amp;nbsp;[[<ref id="">DCXmlNode</ref>
                                    &amp;nbsp;alloc]&amp;nbsp;initWithName:&amp;nbsp;@"abc"];</code>
                                <code>&amp;nbsp;[node&amp;nbsp;<ref id="#addNamespace">addNamespace</ref>
                                    :&amp;nbsp;@"http://url.com"&amp;nbsp;<ref id="#prefix">prefix</ref>
                                    :&amp;nbsp;@"xyz"];</code>
                            </example>
                             Will result in: <example>
                                <code>&amp;nbsp;&amp;lt;xyz:abc&amp;nbsp;xlmns:xyz="http://url.com"&amp;nbsp;/&amp;gt;</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>- addNamespace:prefix:</selector>
            </member>
            <member kind="instance-method">
                <name>namespaces</name>
                <type>NSEnumerator *</type>
                <prototype>- (NSEnumerator *)namespaces</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns an NSEnumerator which can be used to iterator through all the namespaces added to the current <ref id="">DCXmlNode</ref>
                            . </para>
                    </brief>
                    <details>
                        <para>For example <example>
                                <code>&amp;nbsp;for&amp;nbsp;(<ref id="DCXmlNamespace$EXTENSION">DCXmlNamespace</ref>
                                    &amp;nbsp;*&amp;nbsp;namespace&amp;nbsp;in&amp;nbsp;[aNode&amp;nbsp;<ref id="#namespaces">- namespaces</ref>
                                    ]&amp;nbsp;{</code>
                                <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&amp;nbsp;do&amp;nbsp;your&amp;nbsp;stuff&amp;nbsp;here&amp;nbsp;...</code>
                                <code>&amp;nbsp;}</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>- namespaces</selector>
            </member>
        </section>
        <section>
            <name>Attributes</name>
            <member kind="instance-method">
                <name>setAttribute:value:</name>
                <type>void</type>
                <prototype>- (void)setAttribute:(NSString *)<parameter>aName</parameter>
                     value:(NSString *)<parameter>aValue</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Sets the name and value of an attribute. </para>
                    </brief>
                    <details>
                        <para>Here's an example <example>
                                <code>&amp;nbsp;<ref id="">DCXmlNode</ref>
                                    &amp;nbsp;*&amp;nbsp;node&amp;nbsp;=&amp;nbsp;[[<ref id="">DCXmlNode</ref>
                                    &amp;nbsp;alloc]&amp;nbsp;initWithName:&amp;nbsp;@"element"];</code>
                                <code>&amp;nbsp;[node&amp;nbsp;<ref id="#setAttribute">setAttribute</ref>
                                    :&amp;nbsp;@"abc"&amp;nbsp;<ref id="#value">- value</ref>
                                    :&amp;nbsp;@"def"];</code>
                                <code>&amp;nbsp;NSLog(@"%@",&amp;nbsp;[node&amp;nbsp;<ref id="#asXmlString">- asXmlString</ref>
                                    ]);</code>
                            </example>
                             Results in <example>
                                <code>&amp;nbsp;&amp;lt;element&amp;nbsp;abc="def"&amp;nbsp;/&amp;gt;</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>- setAttribute:value:</selector>
            </member>
            <member kind="instance-method">
                <name>attributeValue:</name>
                <type>NSString *</type>
                <prototype>- (NSString *)attributeValue:(NSString *)<parameter>aName</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns the value for an attribute. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- attributeValue:</selector>
            </member>
            <member kind="instance-method">
                <name>attributes</name>
                <type>NSEnumerator *</type>
                <prototype>- (NSEnumerator *)attributes</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns a NSEnumerator which can be used to iterate through all attributes. </para>
                    </brief>
                    <details>
                        <para>For example <example>
                                <code>&amp;nbsp;for&amp;nbsp;(<ref id="">DCXmlNode</ref>
                                    &amp;nbsp;*&amp;nbsp;node&amp;nbsp;in&amp;nbsp;[aNode&amp;nbsp;childNodes]&amp;nbsp;{</code>
                                <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&amp;nbsp;do&amp;nbsp;your&amp;nbsp;stuff&amp;nbsp;here&amp;nbsp;...</code>
                                <code>&amp;nbsp;}</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>- attributes</selector>
            </member>
        </section>
        <section>
            <name>Values</name>
            <member kind="instance-method">
                <name>value</name>
                <type>NSString *</type>
                <prototype>- (NSString *)value</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Shortcut method which returns the value of the first child <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             or nil if there are no child DCTextNodes. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- value</selector>
            </member>
            <member kind="instance-method">
                <name>addTextNodeWithValue:</name>
                <type>DCTextNode *</type>
                <prototype>- (DCTextNode *)addTextNodeWithValue:(NSString *)<parameter>aValue</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Adds an additional <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             to the list of child nodes. </para>
                    </brief>
                    <details>
                        <para>THis is the primary method for adding new text noes to the DM. Note: unlike setValue: this method does not clear the list of child Notes. It's primary purpose is for when loading an xml stream which may contain mixed content. The returned <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             is autoreleased. </para>
                    </details>
                </description>
                <selector>- addTextNodeWithValue:</selector>
            </member>
            <member kind="instance-method">
                <name>setValue:</name>
                <type>void</type>
                <prototype>- (void)setValue:(NSString *)<parameter>value</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Short cut method which clears all current child elements and then adds a single <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                             containing the passed text. </para>
                    </brief>
                    <details>
                        <para>This method also returns void so that it fits the standard getter/setter pattern and therefore can be used in the shortcut form <example>
                                <code>&amp;nbsp;aNode&lt;B>.value&lt;/b>&amp;nbsp;=&amp;nbsp;@"value";</code>
                            </example>
                        </para>
                    </details>
                </description>
                <selector>- setValue:</selector>
            </member>
        </section>
        <section>
            <name>Xml output</name>
            <member kind="instance-method">
                <name>asXmlString</name>
                <type>NSString *</type>
                <prototype>- (NSString *)asXmlString</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Generates the <ref id="">DCXmlNode</ref>
                             as a NSString. </para>
                    </brief>
                    <details>
                        <para>This is called when the client program needs to serialise the DM for sending to servers. </para>
                    </details>
                </description>
                <selector>- asXmlString</selector>
            </member>
            <member kind="instance-method">
                <name>asPrettyXmlString</name>
                <type>NSString *</type>
                <prototype>- (NSString *)asPrettyXmlString</prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Effectively the same as asXmlString: however this "pretty prints" it which is useful for logging purposes where readibility of the xml is the primary factor. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- asPrettyXmlString</selector>
            </member>
        </section>
        <section>
            <name>XPath</name>
            <member kind="instance-method">
                <name>xmlNodeFromXPath:</name>
                <type>DCXmlNode *</type>
                <prototype>- (DCXmlNode *)xmlNodeFromXPath:(NSString *)<parameter>aXpath</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns the <ref id="">DCXmlNode</ref>
                             specified by the supplied Xpath. </para>
                    </brief>
                    <details>
                        <para>If there is no node at any point in the xpath a nil is returned. </para>
                    </details>
                </description>
                <selector>- xmlNodeFromXPath:</selector>
            </member>
            <member kind="instance-method">
                <name>valueFromXPath:</name>
                <type>NSString *</type>
                <prototype>- (NSString *)valueFromXPath:(NSString *)<parameter>aXpath</parameter>
                </prototype>
                <file>DCXmlNode.h</file>
                <description>
                    <brief>
                        <para>Returns NSString specified by the supplied Xpath. </para>
                    </brief>
                    <details>
                        <para>If there is no node at any point in the xpath, or the end of the xpath is not a <ref id="DCTextNode$EXTENSION">DCTextNode</ref>
                            , then a nil is returned. </para>
                    </details>
                </description>
                <selector>- valueFromXPath:</selector>
            </member>
        </section>
    </sections>
</object>