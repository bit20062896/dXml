<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object kind="class" generator="appledoc v1.0.5">
    <name>DCUrlConnection</name>
    <file>DCUrlConnection+NSURLConnectionDelegate.m</file>
    <base>NSObject</base>
    <description>
        <brief>
            <para>This is the driver class for communicating with a url. </para>
        </brief>
        <details>
            <para>It's basic job is to send and receive data from the server and to manage security. Here is a basic example of using this class: <example>
                    <code>&amp;nbsp;NSString&amp;nbsp;*request&amp;nbsp;=&amp;nbsp;@"&amp;lt;?xml&amp;nbsp;version=\"1.0\"&amp;nbsp;encoding=\"UTF-8\"&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"&amp;lt;soap:Envelope&amp;nbsp;xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"&amp;lt;soap:Body&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"&amp;lt;dhc:balance&amp;nbsp;xmlns:dhc=\""&amp;nbsp;MODEL_SCHEMA&amp;nbsp;"\"&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"&amp;lt;forAccountNumber&amp;gt;1234&amp;lt;/forAccountNumber&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"&amp;lt;/dhc:balance&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"\n\t&amp;lt;/soap:Body&amp;gt;"</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@"\n&amp;lt;/soap:Envelope&amp;gt;";</code>
                    <code>&amp;nbsp;<ref id="">DCUrlConnection</ref>
                        &amp;nbsp;*connection&amp;nbsp;=&amp;nbsp;[<ref id="">DCUrlConnection</ref>
                        &amp;nbsp;<ref id="#createWithUrl">createWithUrl</ref>
                        :&amp;nbsp;BANKING];</code>
                    <code>&amp;nbsp;[connection&amp;nbsp;<ref id="#setHeaderValue">setHeaderValue</ref>
                        :&amp;nbsp;BALANCE_ACTION&amp;nbsp;<ref id="#forKey">forKey</ref>
                        :&amp;nbsp;@"SOAPAction"];</code>
                    <code>&amp;nbsp;<ref id="#NSError">NSError</ref>
                        &amp;nbsp;*error&amp;nbsp;=&amp;nbsp;nil;</code>
                    <code>&amp;nbsp;NSData&amp;nbsp;*data&amp;nbsp;=&amp;nbsp;[connection&amp;nbsp;<ref id="#post">post</ref>
                        :&amp;nbsp;request&amp;nbsp;<ref id="#errorVar">errorVar</ref>
                        :&amp;error];</code>
                    <code>&amp;nbsp;if&amp;nbsp;(error&amp;nbsp;!=&amp;nbsp;nil)&amp;nbsp;{</code>
                    <code>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//&amp;nbsp;Deal&amp;nbsp;with&amp;nbsp;the&amp;nbsp;error.</code>
                    <code>&amp;nbsp;}</code>
                    <code>&amp;nbsp;&amp;nbsp&amp;nbsp;</code>
                    <code>&amp;nbsp;//&amp;nbsp;Otherwise&amp;nbsp;process&amp;nbsp;the&amp;nbsp;results.</code>
                </example>
            </para>
        </details>
    </description>
    <sections>
        <section>
            <name>Properties</name>
            <member kind="property">
                <name>serverUrl</name>
                <type>NSString *</type>
                <prototype>@property NSString *serverUrl</prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>This is the url that refers to the server. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>serverUrl</selector>
            </member>
            <member kind="property">
                <name>allowSelfSignedCertificates</name>
                <type>BOOL</type>
                <prototype>@property BOOL allowSelfSignedCertificates</prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>If set to true, the <ref id="">DCUrlConnection</ref>
                             will accept self signed cerificates from the server. </para>
                    </brief>
                    <details>
                        <para>This is most useful when developing code as the server can be on the developer's machine. This setting allows the developer to work without having to obtain formal certifcates. </para>
                    </details>
                </description>
                <selector>allowSelfSignedCertificates</selector>
            </member>
            <member kind="property">
                <name>storeCredentials</name>
                <type>BOOL</type>
                <prototype>@property BOOL storeCredentials</prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>If set to true, credentials are stored and reused. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>storeCredentials</selector>
            </member>
        </section>
        <section>
            <name>Constructors and factory methods</name>
            <member kind="instance-method">
                <name>initWithUrl:</name>
                <type>DCUrlConnection *</type>
                <prototype>- (DCUrlConnection *)initWithUrl:(NSString *)<parameter>aUrl</parameter>
                </prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>Default constructor. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- initWithUrl:</selector>
            </member>
            <member kind="class-method">
                <name>createWithUrl:</name>
                <type>DCUrlConnection *</type>
                <prototype>+ (DCUrlConnection *)createWithUrl:(NSString *)<parameter>aUrl</parameter>
                </prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>Factory method which generates a autorelease instance. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>+ createWithUrl:</selector>
            </member>
        </section>
        <section>
            <name>Communicaton</name>
            <member kind="instance-method">
                <name>post:errorVar:</name>
                <type>NSData *</type>
                <prototype>- (NSData *)post:(NSString *)<parameter>bodyContent</parameter>
                     errorVar:(NSError **)<parameter>aErrorVar</parameter>
                </prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>Call this to post a message to the destination server. </para>
                    </brief>
                    <details>
                        <para>The bodyContent data will be set as the httpBodyContent in the post message. The response is the raw stream returned by the server. </para>
                    </details>
                </description>
                <parameters>
                    <param>
                        <name>bodyContent</name>
                        <description>
                            <para>a string containing the message to send via http post. </para>
                        </description>
                    </param>
                    <param>
                        <name>aErrorVar</name>
                        <description>
                            <para>reference to an error variable that will be populated if an error occurs. This must be passed as `&amp;aErrorVar`. In other words, the address of the error variable. </para>
                        </description>
                    </param>
                </parameters>
                <seeAlso>
                    <item>
                        <ref id="#NSURLConnectionDelegate for details of how the response is assembled.">NSURLConnectionDelegate for details of how the response is assembled.</ref>
                    </item>
                </seeAlso>
                <selector>- post:errorVar:</selector>
            </member>
        </section>
        <section>
            <name>Additonal properties</name>
            <member kind="instance-method">
                <name>setHeaderValue:forKey:</name>
                <type>void</type>
                <prototype>- (void)setHeaderValue:(NSString *)<parameter>value</parameter>
                     forKey:(NSString *)<parameter>key</parameter>
                </prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>Adds a header element to the message. </para>
                    </brief>
                    <details>
                        <para>Call before posting a message. </para>
                    </details>
                </description>
                <selector>- setHeaderValue:forKey:</selector>
            </member>
            <member kind="instance-method">
                <name>setUsername:password:</name>
                <type>void</type>
                <prototype>- (void)setUsername:(NSString *)<parameter>aUsername</parameter>
                     password:(NSString *)<parameter>aPassword</parameter>
                </prototype>
                <file>DCUrlConnection.h</file>
                <description>
                    <brief>
                        <para>Sets the username and password to be used for encrypted connections. </para>
                    </brief>
                    <details></details>
                </description>
                <selector>- setUsername:password:</selector>
            </member>
        </section>
        <section>
            <name>Delegate methods</name>
            <member kind="instance-method">
                <name>connection:willSendRequest:redirectResponse:</name>
                <type>NSURLRequest *</type>
                <prototype>- (NSURLRequest *)connection:(NSURLConnection *)<parameter>connection</parameter>
                     willSendRequest:(NSURLRequest *)<parameter>request</parameter>
                     redirectResponse:(NSURLResponse *)<parameter>response</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:willSendRequest:redirectResponse:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:canAuthenticateAgainstProtectionSpace:</name>
                <type>BOOL</type>
                <prototype>- (BOOL)connection:(NSURLConnection *)<parameter>connection</parameter>
                     canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)<parameter>protectionSpace</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:canAuthenticateAgainstProtectionSpace:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:needNewBodyStream:</name>
                <type>NSInputStream *</type>
                <prototype>- (NSInputStream *)connection:(NSURLConnection *)<parameter>connection</parameter>
                     needNewBodyStream:(NSURLRequest *)<parameter>request</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:needNewBodyStream:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didReceiveAuthenticationChallenge:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)<parameter>challenge</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didReceiveAuthenticationChallenge:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didCancelAuthenticationChallenge:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)<parameter>challenge</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didCancelAuthenticationChallenge:</selector>
            </member>
            <member kind="instance-method">
                <name>connectionShouldUseCredentialStorage:</name>
                <type>BOOL</type>
                <prototype>- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)<parameter>connection</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connectionShouldUseCredentialStorage:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didReceiveResponse:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didReceiveResponse:(NSURLResponse *)<parameter>response</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didReceiveResponse:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didReceiveData:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didReceiveData:(NSData *)<parameter>data</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didReceiveData:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didSendBodyData:(NSInteger)<parameter>bytesWritten</parameter>
                     totalBytesWritten:(NSInteger)<parameter>totalBytesWritten</parameter>
                     totalBytesExpectedToWrite:(NSInteger)<parameter>totalBytesExpectedToWrite</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:</selector>
            </member>
            <member kind="instance-method">
                <name>connectionDidFinishLoading:</name>
                <type>void</type>
                <prototype>- (void)connectionDidFinishLoading:(NSURLConnection *)<parameter>connection</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connectionDidFinishLoading:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:didFailWithError:</name>
                <type>void</type>
                <prototype>- (void)connection:(NSURLConnection *)<parameter>connection</parameter>
                     didFailWithError:(NSError *)<parameter>error</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:didFailWithError:</selector>
            </member>
            <member kind="instance-method">
                <name>connection:willCacheResponse:</name>
                <type>NSCachedURLResponse *</type>
                <prototype>- (NSCachedURLResponse *)connection:(NSURLConnection *)<parameter>connection</parameter>
                     willCacheResponse:(NSCachedURLResponse *)<parameter>cachedResponse</parameter>
                </prototype>
                <file>DCUrlConnection+NSURLConnectionDelegate.h</file>
                <description>
                    <brief>
                        <para></para>
                    </brief>
                    <details></details>
                </description>
                <selector>- connection:willCacheResponse:</selector>
            </member>
        </section>
    </sections>
</object>