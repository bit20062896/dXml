////  SoapWebserviceTests.m//  dXml////  Created by Derek Clarkson on 26/11/09.//  Copyright 2009 Derek Clarkson. All rights reserved.//#import <Foundation/Foundation.h>#import "dXml.h"#import "GHUnit.h"#import "SoapWebServiceConnection.h"#import "WebServiceFault.h"#import "XmlDocument.h"#import "IntegrationTestDefaults.h"@interface SoapWebserviceIntegrationTests : GHTestCase{}- (XmlNode *) createBalancePayload;- (void) assertBalanceResponse: (WebServiceResponse *) response;@end@implementation SoapWebserviceIntegrationTests- (void) testMsgUsingXmlString {	NSString *xml = @"<dhc:balance xmlns:dhc=\"" MODEL_SCHEMA "\">"																				 @"<forAccountNumber>1234</forAccountNumber>"																				 @"</dhc:balance>";	SoapWebServiceConnection *service = [SoapWebServiceConnection createWithUrl: BANKING soapAction: BALANCE_ACTION];	WebServiceResponse *response = [service postXmlStringPayload: xml];	[self assertBalanceResponse: response];}- (void) testMsgUsingXmlNodes {	XmlNode *accountBalance = [self createBalancePayload];	SoapWebServiceConnection *service = [SoapWebServiceConnection createWithUrl: BANKING soapAction: BALANCE_ACTION];	WebServiceResponse *response = [service postXmlNodePayload: accountBalance];	[self assertBalanceResponse: response];}- (void) testSecureMsgUsingXmlNodes {	XmlNode *accountBalance = [self createBalancePayload];	SoapWebServiceConnection *service = [SoapWebServiceConnection createWithUrl: BANKING soapAction: BALANCE_ACTION];	WebServiceResponse *response = [service postXmlNodePayload: accountBalance];	[self assertBalanceResponse: response];}- (void) testMsgFaultGeneral {	//THis is an old format payload which no longer works. Now generates a soap fault.	NSString *xml = @"<dhc:AccountBalance xmlns:dhc=\"" BASE_SCHEMA "\" />";	SoapWebServiceConnection *service = [SoapWebServiceConnection createWithUrl: BANKING soapAction: BALANCE_ACTION];	WebServiceResponse *response = [service postXmlStringPayload: xml];	GHAssertTrue([response isKindOfClass:[WebServiceFault class]], @"Soap Fault class not returned.");	WebServiceFault *asFault = (WebServiceFault *)response;	GHAssertEqualStrings([asFault message], @"Cannot find dispatch method for {" BASE_SCHEMA "}AccountBalance", @"Incorrect fault string");}- (void) testMsgWithFaultCustom {	NSString *xml = @"<dhc:balance xmlns:dhc=\"" MODEL_SCHEMA "\" />";	SoapWebServiceConnection *service = [SoapWebServiceConnection createWithUrl: BANKING soapAction: BALANCE_ACTION];	WebServiceResponse *response = [service postXmlStringPayload: xml];	GHAssertTrue([response isKindOfClass:[WebServiceFault class]], @"Soap Fault class not returned.");	WebServiceFault *asFault = (WebServiceFault *)response;	GHAssertEqualStrings([asFault message], @"No account number passed to service.", @"Incorrect fault string");}- (void) assertBalanceResponse: (WebServiceResponse *) response {	GHAssertEqualStrings([response bodyContent].name, @"balanceResponse", @"Body content incorrect");	GHAssertNotNil([[response bodyContent] xmlNodeWithName: @"balance"], @"Response not correct.");	GHAssertNotNil([[response bodyContent] xmlNodeWithName: @"balance"].value, @"No balance amount");}- (XmlNode *) createBalancePayload {	XmlNode *accountBalance = [[[XmlNode alloc] initWithName: @"balance" prefix: @"dhc"] autorelease];	[accountBalance addNamespace: MODEL_SCHEMA prefix: @"dhc"];	[accountBalance addXmlNodeWithName: @"forAccountNumber" prefix: nil value: @"1234"];	return accountBalance;}@end