////  XmlParser.m//  dXml////  Created by Derek Clarkson on 25/10/09.//  Copyright 2009 __MyCompanyName__. All rights reserved.//#import "XmlParser.h"#import "dXml.h"#import "XmlNode.h"//Private method category used to hide methods (almost).@interface XmlParser ()- (void) finishParserSetup: (NSObject *) delegate;@end@implementation XmlParser+ (XmlParser *) parserWithXml : (NSString *) xml {	return [[[XmlParser alloc] initWithXml: xml] autorelease];}+ (XmlParser *) parserWithData: (NSData *) data {	return [[[XmlParser alloc] initWithData: data] autorelease];}+ (XmlParser *) parserWithUrl: (NSURL *) url {	return [[[XmlParser alloc] initWithUrl: url] autorelease];}- (XmlParser *) initWithXml: (NSString *) xml {	return [self initWithData:DHC_STRING_TO_DATA(xml)];}- (XmlParser *) initWithData: (NSData *) data {	self = [super init];	if (self) {		parser = [[NSXMLParser alloc] initWithData: data];	}	return self;}- (XmlParser *) initWithUrl: (NSURL *) url {	self = [super init];	if (self) {		parser = [[NSXMLParser alloc] initWithContentsOfURL: url];	}	return self;}- (XmlDocument *) parse {	DHC_LOG(@"parsing a Document");	XmlDocumentParserDelegate *delegate = [[[XmlDocumentParserDelegate alloc] init] autorelease];	[self finishParserSetup: delegate];	[parser parse];	return [delegate document];}- (XmlNode *) parseSubtree {	DHC_LOG(@"parsing a Subtree");	XmlSubtreeParserDelegate *delegate = [[[XmlSubtreeParserDelegate alloc] init] autorelease];	[self finishParserSetup: delegate];	[parser parse];	return [delegate rootNode];}- (void) finishParserSetup: (NSObject *) delegate {	parser.shouldProcessNamespaces = YES;	parser.shouldReportNamespacePrefixes = YES;	[parser setDelegate: delegate];}- (void) dealloc {	DHC_DEALLOC(parser);	[super dealloc];}@end