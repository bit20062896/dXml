////  SecurityImplementations.h//  dXml////  Created by Derek Clarkson on 4/12/09.//  Copyright 2009 Derek Clarkson. All rights reserved.//#import <Foundation/Foundation.h>#import "XmlDocument.h"//Common strings and values.#define WSSECURITY_PREFIX @"wsse"#define WSSECURITY_URL @"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"#define WSSECURITY_UTILITY_PREFIX @"wsu"#define WSSECURITY_UTILITY_URL @"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"#define WSSECURITY_USERNAME_TOKEN_PROFILE_PASSWORDTEXT @"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"/** * Enum which specifies the type of security to be implemented. */enum SecurityTypeEnum {	/** No security is applied */	NONE,	/** basic userid and password security.*/	BASIC_USERID_PASSWORD};typedef enum SecurityTypeEnum SECURITYTYPE;/** * Any class that is used to setup security must implement this interface. This alls the connection classes to be agnostic about what security is being applied. */@protocol SecurityModel/** * Secures the passed soap message. Each security class will do this in a different way. */- (void) secureSoapMessage: (XmlDocument *) soapMessage;@end/** * Security is the main factory class for applying security. Essentially you set it up with the security information you have then ask it to provide a security handler back. This handler can then be used to implement that style of security on the soap messages. */@interface Security:NSObject {	@private	NSString *userid;	NSString *password;}/** * Default constructor. At this stage it simple takes a userid and password. As time goes on there will need to be other constructors which take other types of security information. */- (Security *) initWithUserid: (NSString *) aUserid password: (NSString *) aPassword;/** * Creates an autorelease instance of Security with the passed userid and password. */+ (Security *) createSecurityWithUserid: (NSString *) aUserid password: (NSString *) aPassword;/** * Called to obtain an instance of SecurityModel which implements the required security. */- (NSObject <SecurityModel> *) createSecurityModelOfType: (SECURITYTYPE) securityType;@end